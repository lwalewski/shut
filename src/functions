shut_messag_fmt="%-50s"
shut_passed_fmt=" PASSED\n"
shut_failed_equal_fmt="*FAILED* (expected '%s' but got '%s')\n"
shut_failed_not_equal_fmt="*FAILED* (expected NOT '%s' but got '%s')\n"

assert_equal() {
	local exp="$1" && shift
	local act="$1" && shift
	local msg="$1" && shift
	printf "$shut_messag_fmt" "$msg"
	if [ "$exp" = "$act" ]; then
		printf "$shut_passed_fmt"
		return 0
	else
		printf "$shut_failed_equal_fmt" "$exp" "$act"
		return 1
	fi
}

assert_not_equal() {
	local exp="$1" && shift
	local act="$1" && shift
	local msg="$1" && shift
	printf "$shut_messag_fmt" "$msg"
	if [ "$exp" != "$act" ]; then
		printf "$shut_passed_fmt"
		return 0
	else
		printf "$shut_failed_not_equal_fmt" "$exp" "$act"
		return 1
	fi
}

assert_returns_true() {
	local cmd="$1" && shift
	local msg="$1" && shift
	printf "$shut_messag_fmt" "$msg"
	eval "$cmd"
	if [ $? -eq 0 ]; then
		printf "$shut_passed_fmt"
		return 0
	else
		printf "*FAILED* (expected <true> but got <false>)\n"
		return 1
	fi
}

assert_returns_false() {
	local cmd="$1" && shift
	local msg="$1" && shift
	printf "$shut_messag_fmt" "$msg"
	eval "$cmd"
	if [ $? -eq 1 ]; then
		printf "$shut_passed_fmt"
		return 0
	else
		printf "*FAILED* (expected <false> but got <true>)\n"
		return 1
	fi
}

is_path() {
	local str="$1" && shift
	if [ $(expr index "$str" "/") -gt 0 ]; then
		return 0
	else
		return 1
	fi
}

ensure_rel_path() {
	local str="$1" && shift
	if ! is_path "$str"; then
		str="./$str"
	fi
	echo "$str"
}
