#!/bin/sh
#
# run test cases defined in the input file

OPTIONS=`getopt -o f: -n "$0" -- "$@"`

eval set -- "$OPTIONS"

while true; do
	case "$1" in
	-f)
		SHUT_SUITE="$2"
		shift 2
		;;
	--)
		shift
		break
		;;
	*)
		echo "*** internal error!"
		exit 1
		;;
	esac
done


die() {
	[ $# -gt 0 ] && echo "*** error: $@" >&2
	exit 1
}


. $(dirname $0)/functions || die "could not source own implementation!"

if [ -r $SHUT_SUITE ]; then
	shut_suite_path=$(ensure_rel_path $SHUT_SUITE)
	. $shut_suite_path || die "could not source test suite '$shut_suite_path'"
	ntests=$(echo "$SHUT_TESTS" | wc -w)
	echo "running "$ntests" test cases from '$shut_suite_path'"

	if [ "$SHUT_TARGET" = "_self" ]; then
		echo "testing own implementation"
	else
		shut_suite_dir=$(dirname $shut_suite_path)
		shut_target_path="${shut_suite_dir}/${SHUT_TARGET}"
		. $shut_target_path
		echo "testing implementation in '$shut_target_path'"
	fi
	echo
else
	echo "*** could not read test suite '$SHUT_SUITE'"
	exit 1
fi

npassed=0; nfailed=0; ntotal=0
for i in ${SHUT_TESTS}; do
	if $i; then
		npassed=$(expr "$npassed" + 1)
	else
		nfailed=$(expr "$nfailed" + 1)
	fi
	ntotal=$(expr "$ntotal" + 1)
done

echo
echo "Summary"
echo "-------"
echo "tests total..: $ntotal"
echo "tests passed.: $npassed"
echo "tests failed.: $nfailed"

[ $nfailed -eq 0 ]
return $?
